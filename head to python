第一章：初识python（人人都爱列表）

  #为了降低处理复杂性，通常把数据组织成为列表#

  创建简单的python列表：movies = ["AAA","BBB","CCC"]

  注意：为了把人可读的列表转换为python可读的列表，需要遵循以下4个步骤
      1、在数据两边加引号，将名称转换为字符串
      2、用逗号将列表项与下一项分开
      3、在列表的两边加上开始和结束的中括号
      4、使用赋值操作符（=）将这个列表赋至一个标识符（以上代码中的movies）

  #不用声明变量类型信息，python变量标识符没有类型#

  列表的数组项是从0开始的，即0，1，2，3，4...
  如输入：print(movies[1])，显示的则是:BBB

  An IDLE Session

    print(len(movies))
    print(movies[1]))
    #对一个函数再嵌套一个函数是可以的#

    #python里单引号和双引号的使用区别，参考https://blog.csdn.net/woainishifu/article/details/76105667#
    当你用单引号' '定义字符串的时候，它就会认为你字符串里面的双引号" "是普通字符，从而不需要转义。\n
    反之当你用双引号定义字符串的时候，就会认为你字符串里面的单引号是普通字符无需转义

    创建列表后，可以再列表末尾增加一个数据项，使用append()方法
    #函数名记忆方法：末尾end，增加app（add\plus）#

    从末尾删除一个数据项，使用pop()方法，括号里不用输入，直接删除最后一项

    在列表末尾增加一个数据项,使用extend()方法，如moives.extend(['ddd',"eee"])

    在列表中删除特定的某个数据项，使用remove()方法，具体为：movies.remove('ccc')或movies.remove(movies['4'])
    #两种区别在于前一种知道数据项，直接删除，后一种不知道数据项，根据位置进行删除

    在列表中某个特定位置前插入一个数据项，使用insert()方法，具体为：movies.insert(0，‘ZZZZ’)

    #python列表可以混合不类型的数据#

     处理列表数据：迭代
     for:for循环是可伸缩的，适用于任意大小的列表
     具体如下：for 目标标识符 in 列表 ： 列表处理代码。eg:for aa in movies:print(aa)
      #列表处理代码称为组，suite#

    while:使用while循环时必须考虑“状态信息”，要求使用一个计数标识符
      eg: count = 0
          while count < len(movies):
            print(movies[count])
            count =count+1

        TIPS:1、迭代处理除非有特殊理由必须用while，否则一般使用for循环，避免“大小差1”的错误

             2、python列表不支持越界检查

             3、标识符可以以一个字母或下划线开头，且python属于大小写敏感

             4、BIF，BUILT-IN FUNCTION，内置函数的意思

    在列表中存储列表（列表嵌套）
    eg:moives = ['grail',1975,'gilliam',91,['chapman',['palin','cleese']]]
       print(moives[4][1][1])
       cleese

    An IDLE Session
    for ab in moives:
      print(ab)


        grail
        1975
        gilliam
        91
        ['chapman', ['palin', 'cleese']]
    #for循环只打印了外列表，因为内列表也只是外列表的一个列表项，需要打印内列表，要采取新的机制

    在列表中查找列表，采用if...else...模式，主义代码组缩进格式以及if和else后面的冒号。
    if 某个条件满足 ：
      "true"组
    else：
      “false”组

        #isinstance()函数允许检查某个特定标识符是否包含某个特定类型的数据
        eg:>>>name = ['aaa','bbb']   #定义name列表
           >>>isinstance(name,list)  #使用函数判断name是不是列表类型，list指一个python类型，在此处，类型为list
              True
           >>> num_name = len(name)  #定义num_name
           >>> isinstance(num_name,list)  #判断num_name是不是列表
              False

    利用if...else...和isinstance()改进for循环，将数据罗列：
    eg:>>> for aa in moives:
	           if isinstance(aa,list):
		            for ab in aa:
			             print(ab)
	           else:
		           print(aa)


               grail
               1975
               gilliam
               91
               chapman
               ['palin', 'cleese'] #依然不能完整显示
