#函数转换为模块，对模块的主要要求就是文件名以.py结尾

  将函数保存到一个以.py结尾的文件中，即可将函数转换为模块

  python包索引（python package index,pypi）为第三方python模块提供了一个集中的存储库。可以使用pypi发布自己的模块

  在python中常用三重引号来表示注释""" """,进行多行注释，也可以直接在行头使用#

发布模块

   1、为模块创建一个文件夹
   2、在新文件夹中创建一个setup.py的文件，，编辑setup.py文件
      from distutils.core import setup #从python发布工具中导入setup函数
      setup(
              name         =
              version      =
              py_modules   =
              author       =
              author_email =
              url          =
              description  =
              #.....等等
            )
    3、构建一个发布文件,进入到需要发布的文件目录,终端运行python3 setup.py sdist
    4、将发布安装到本地副本，终端运行python3 setup.py install
    5、使用import导入模块并使用

使用函数时，要采用 模块名.函数名（）的格式进行采用。命名空间名错误

TIPS:使用一个普通的import语句时，如import nester，会指示python解释器允许你使用命名空间限定来访问nester函数。
     不过更为特定的，如果使用from nester import print_lol，则会把指定的函数（这里就是print_lol）增加到当前命名空间，就不需要再使用命名空间限定。不过如果命名空间里已经存在print_lol，使用这种特定语句，会覆盖原来的print_lol语句

     6、注册PyPI网站
     7、向PyPI上传代码

#用额外的参数控制代码，python中代码缩进很重要！一定要按层次缩进代码

#1>>> def print_lol(the_list,level=0):
        for each_time in the_list:
            if isinstance(each_time,list):
                  print_lol(each_time,level+1)
            else:
                  for tab_stop in range(level):
                    print("\t",end='')
                  print(each_time)

#2                  >>> def print_lol(the_list,indent=False,level=0):
                  	for each_time in the_list:
                  		if isinstance(each_time,list):
                  			print_lol(each_time,indent,level+1)
                  		else:
                  			if indent:
                  				for tab_stop in range(level):
                  					print("\t",end='')
                  		print(each_time)

    
